<manifest xmlns:android="http://schemas.android.com/apk/res/android"
          xmlns:tools="http://schemas.android.com/tools"
          package="com.dsm.xiaodi.biz.push">

    <!-- 个推SDK权限配置开始 -->
    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.READ_PHONE_STATE" />
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
    <uses-permission android:name="android.permission.CHANGE_WIFI_STATE" />
    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />
    <uses-permission android:name="android.permission.WAKE_LOCK" />
    <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED" />
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.VIBRATE" />

    <!-- 支持iBeancon 需要蓝牙权限 -->
    <!--<uses-permission android:name="android.permission.BLUETOOTH" />
    <uses-permission android:name="android.permission.BLUETOOTH_ADMIN" />-->
    <!-- 支持个推3.0 电子围栏功能 -->
    <!--<uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />-->

    <!-- 浮动通知权限 -->
    <uses-permission android:name="android.permission.SYSTEM_ALERT_WINDOW" />
    <!-- 自定义权限 -->
    <uses-permission android:name="getui.permission.GetuiService.${applicationId}" />

    <permission
        android:name="getui.permission.GetuiService.${applicationId}"
        android:protectionLevel="normal" />
    <!-- 个推SDK权限配置结束 -->

    <application
        android:allowBackup="false"
        android:supportsRtl="true">

        <!-- 个推SDK配置开始 -->
        <!-- 配置的第三方参数属性 -->
        <meta-data
            android:name="PUSH_APPID"
            tools:replace="android:value"
            android:value="${GETUI_APP_ID}" />
        <meta-data
            android:name="PUSH_APPKEY"
            tools:replace="android:value"
            android:value="${GETUI_APP_KEY}" />
        <meta-data
            android:name="PUSH_APPSECRET"
            tools:replace="android:value"
            android:value="${GETUI_APP_SECRET}" />

        <!-- 配置SDK核心服务 -->
        <service
            android:name="com.igexin.sdk.PushService"
            android:exported="false"
            android:label="NotificationCenter"
            android:process=":pushservice"
            tools:replace="android:exported">
            <intent-filter>
                <action android:name="com.igexin.sdk.action.service.message" />
            </intent-filter>
        </service>

        <receiver android:name="com.igexin.sdk.PushReceiver">
            <intent-filter>
                <action android:name="android.intent.action.BOOT_COMPLETED" />
                <action android:name="android.net.conn.CONNECTIVITY_CHANGE" />
                <action android:name="android.intent.action.USER_PRESENT" />
                <action android:name="com.igexin.sdk.action.refreshls" />
                <!-- 以下三项为可选的action声明，可大大提高service存活率和消息到达速度 -->
                <action android:name="android.intent.action.MEDIA_MOUNTED" />
                <action android:name="android.intent.action.ACTION_POWER_CONNECTED" />
                <action android:name="android.intent.action.ACTION_POWER_DISCONNECTED" />
            </intent-filter>
        </receiver>

        <activity
            android:name="com.igexin.sdk.PushActivity"
            android:excludeFromRecents="true"
            android:exported="false"
            android:process=":pushservice"
            android:taskAffinity="com.igexin.sdk.PushActivityTask"
            android:theme="@android:style/Theme.Translucent.NoTitleBar" />

        <service
            android:name="com.igexin.download.DownloadService"
            android:process=":pushservice" />

        <receiver android:name="com.igexin.download.DownloadReceiver">
            <intent-filter>
                <action android:name="android.net.conn.CONNECTIVITY_CHANGE" />
            </intent-filter>
        </receiver>

        <provider
            android:name="com.igexin.download.DownloadProvider"
            android:authorities="downloads.${applicationId}"
            android:exported="false"
            android:process=":pushservice"
            tools:replace="android:exported"/>

        <activity
            android:name="com.igexin.sdk.GActivity"
            android:excludeFromRecents="true"
            android:exported="true"
            android:process=":pushservice"
            android:taskAffinity="com.igexin.sdk.PushActivityTask"
            android:theme="@android:style/Theme.Translucent.NoTitleBar" />

        <!-- 用户自定义服务名 -->
        <service
            android:name=".XiaodiPushService"
            android:exported="false"
            android:label="PushService"
            android:process=":pushservice" />

        <!-- 用户自定义服务继承自GTIntentService,作为SDK与APP桥梁服务,用来接收各种消息和命令回复 -->
        <service android:name=".XiaodiIntentService" />

        <!-- 个推SDK配置结束 -->
    </application>

</manifest>
